---
export interface Props {
  title: string,
  body: string,
  href: string,
  hreftitle: string,
}
const { href, title, body, hreftitle } = Astro.props;
---

<li class="link-card">
  <a href={href}>
    <h3>
      {title}
      <span>&rarr;</span>
    </h3>
    <p class="body">
      {body}
    </p>
    <p class="url">
         {hreftitle}	
    </p>
  </a>
</li>

<style>
	:root {
	  --link-gradient: linear-gradient(45deg, #fac339, #de6127 30%, var(--color-border) 60%);
	}
  
	li.link-card {
	  list-style: none;
	  display: flex;
	  background-color: var(--theme-bg-accent);
	  border: 1px solid #ccc;
	  
/*
    border-radius: 6px;
    padding: 1rem;
    margin: 0rem;
    max-width: 300px;
    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
*/


	   /* card layout */
	   display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: auto auto auto;
    grid-template-areas:
      "title"
      "body"
      "href";

	}
  
	li.link-card>a {
	  width: 100%;
	  text-decoration: none;
	  padding: 1em;
	  border-radius: 2px;
	  background-color: white;
	  opacity: 0.8;
	  color: var(--color-text);
	  box-shadow: rgba(0, 0, 0, 0.1) 0px 3px 2px;
	  font-size: 90%;
	}
  
	h3 {
	  font-size: 110%;
	  margin: 0;
	  transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
  
	p {
	  margin-top: 0.75rem;
	  margin-bottom: 0;
	}
  
	p.body {
	  height: 10ch;
	  overflow-y: auto;
	}
  
	p.url {
	  opacity: 0.5;
	  font-size: 100%;
	}
  
	.link-card:is(:hover, :focus-within) {
	  background-position: 0;
	}
  
	.link-card:is(:hover, :focus-within) h3 {
	  color: maroon;
	}
  
	.link-card:is(:hover, :focus-within) h3 span {
	  transform: translateX(2px);
	}
	.link-card:hover {
		transform: translateY(-2px);
		box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);}
  </style>